FROM python:3.10-slim-bullseye

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update -yqq && \
    apt-get install --no-install-recommends -yqq \
    software-properties-common \
    build-essential \
    git \
    cmake \
    curl \
    gcc \
    wget \
    unzip \
    yasm \
    pkg-config \
    libopenmpi-dev \
    libswscale-dev \
    libtbb-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libavformat-dev \
    libpq-dev \
    libxine2-dev \
    libglew-dev \
    zlib1g-dev \
    libavcodec-dev \
    libavutil-dev \
    libpostproc-dev \
    libeigen3-dev \
    libgtk2.0-dev \
    libopencv-dev \
    libturbojpeg0-dev \
    python3-dev \
    python3-numpy \
    ffmpeg \
    libsm6 \
    libxext6 \
    dirmngr \
    numactl \
    gnupg && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/debian11/x86_64/3bf863cc.pub && \
    add-apt-repository -y "deb https://developer.download.nvidia.com/compute/cuda/repos/debian11/x86_64/ /" && \
    add-apt-repository -y contrib && \
    apt-get update -yqq && \
    apt-get -yqq install cuda-11.7 && \
    rm -rf /var/lib/apt/lists/*

ENV CUDA_HOME=/usr/local/cuda-11.7/
ENV PATH="${CUDA_HOME}/bin/":${PATH}

### Setup for FFCV Inspired from https://github.com/kschuerholt/pytorch_cuda_opencv_ffcv_docker
# ARG OPENCV_VERSION=4.7.0
# RUN cd /opt/ && \
#     wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip && \
#     unzip $OPENCV_VERSION.zip && \
#     rm $OPENCV_VERSION.zip && \
#     wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip && \
#     unzip ${OPENCV_VERSION}.zip && \
#     rm ${OPENCV_VERSION}.zip && \
#     mkdir /opt/opencv-${OPENCV_VERSION}/build && cd /opt/opencv-${OPENCV_VERSION}/build && \
#     cmake \
#     -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
#     -DWITH_CUDA=ON \
#     -DCUDA_ARCH_BIN=7.5,8.0,8.6 \
#     -DCMAKE_BUILD_TYPE=RELEASE \
#     -DOPENCV_GENERATE_PKGCONFIG=YES \
#     -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
#     make -j"$(nproc)" && \
#     make install && \
#     ldconfig && \
#     rm -rf /opt/opencv-${OPENCV_VERSION} && rm -rf /opt/opencv_contrib-${OPENCV_VERSION}

WORKDIR /deep_learning_at_scale

RUN --mount=type=cache,target=/root/.cache \
    python -m pip install -Uq pip build

COPY requirements.txt .

RUN --mount=type=cache,target=/root/.cache \
    python -m pip install --no-compile -r requirements.txt

# Install other FFCV dependencies
RUN --mount=type=cache,target=/root/.cache \
    pip3 install cupy-cuda121 ffcv mpi4py deepspeed

COPY . ./

RUN python -m pip install -e .
