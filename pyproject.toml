[project]
name = "deep-learning-at-scale"
description = ""
authors = [
    { name = "Suneeta Mall", email = "suneeta.mall@unknown.com" }
]
requires-python = ">=3.8,<3.10"
dynamic = ["version"]

dependencies = [
    "einops",
    "lightning",
    "bs4",
    "spacy",
    "ray",
    "torch",
    "torchvision",
    "torchmetrics",
    "lightning",
    "torch_tb_profiler",
    "torchinfo",
    "torchviz",
    "numpy",
    "typer",
    "timm",
    "bitsandbytes",
    "datasets",
    "evaluate",
    "transformers",
    "deepspeed",  
    "pyod",
    "kornia",
    "optuna",
    "optuna-integration",
    "trl",
    "peft",
    "sentencepiece",
    "opencv-python", 
    "Pillow", 
    "scikit-image",
    "umap-learn",
    "aim<4"
]

[project.optional-dependencies]
dev = [
    "ruff",
    "memory-profiler",
    "ipykernel",
    "ipython",    
    "matplotlib",
    "tensorboard",
    "mypy",
    "types-Pillow",
    "types-PyYAML",
    "types-requests",
    "types-tqdm",
    "pytest",
    "pytest-check",
    "pytest-cov",
    "pytest-xdist",

]

all = [
    "deep-learning-at-scale[dev]"
]

[project.scripts]
deep-learning-at-scale = "deep_learning_at_scale.app:main"

[tool.setuptools.dynamic]
version = { attr = "deep_learning_at_scale._version.__version__" }

[tool.setuptools.packages.find]
include = ["deep_learning_at_scale*"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[build-system]
requires = ["setuptools>=65.3.0"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "--cov"
filterwarnings = ["ignore::pytest.PytestCacheWarning"]
markers = [
    "chapter_2"
]
testpaths = ["tests"]

[tool.coverage.run]
source = ['deep_learning_at_scale']
omit = ["*/__init__.py"]

[tool.mypy]
enable_error_code = "ignore-without-code"
files = ["deep_learning_at_scale", "tests"]
exclude = [".tmp"]
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_typed = true
warn_untyped_fields = true

[tool.ruff]
lint.select = ["E", "F"]
lint.ignore = []
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv"
]
line-length = 88
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py310"
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
[tool.ruff.lint.mccabe]
max-complexity = 10
